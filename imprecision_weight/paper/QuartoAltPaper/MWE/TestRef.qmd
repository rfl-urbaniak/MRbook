---
title: "Testing references for empty file"
format: pdf
latex:
  header-includes: quartoStyle.sty
---

## Labelling equations 

\begin{align*}        
\mathbb{P}_{t_1} &= \{\mathsf{P}_{t_1}\vert \exists\, {\mathsf{P}_{t_0} \!\in  \mathbb{P}_{t_0}}\,\, \forall\, {H}\,\, \left[\mathsf{P}_{t_1}(H)=\mathsf{P}_{t_0}(H \vert E)\right] \}.
\end{align*}

\begin{align} 
\mathbb{P}_{t_1} &= \{\mathsf{P}_{t_1}\vert \exists\, {\mathsf{P}_{t_0} \!\in  \mathbb{P}_{t_0}}\,\, \forall\, {H}\,\, \left[\mathsf{P}_{t_1}(H)=\mathsf{P}_{t_0}(H \vert E)\right] \}.
\label{eq:equation1} % Label for the first equation
\end{align}

Is there a difference?

\begin{equation}
\mathbb{P}_{t_1} = \{\mathsf{P}_{t_1}\vert \exists\, {\mathsf{P}_{t_0} \!\in  \mathbb{P}_{t_0}}\,\, \forall\, {H}\,\, \left[\mathsf{P}_{t_1}(H)=\mathsf{P}_{t_0}(H \vert E)\right] \}.
\label{eq-equation2} % Label for the second equation
\end{equation}

$$
\mathbb{P}_{t_1} = \{\mathsf{P}_{t_1}\vert \exists\, {\mathsf{P}_{t_0} \!\in  \mathbb{P}_{t_0}}\,\, \forall\, {H}\,\, \left[\mathsf{P}_{t_1}(H)=\mathsf{P}_{t_0}(H \vert E)\right] \}.
$$ {#eq-equation3}  


Hello, now I am referring \ref{eq:equation1}, the same again @eq:equation1                  


Hello, now I am referring again \ref{eq-equation2}, the same again @eq-equation2                      


Hello, now I am referring and again \ref{eq:equation3}, the same again @eq-equation3         


From the main text \ref{eq:updateRepresentor2}

## Labelling figures (and testing python chunk)



```{python firstcell}

#| label: fig-line-plot
#| fig-cap: "A line plot"
#| echo: false
import matplotlib.pyplot as plt

categories = ['Category A', 'Category B', 'Category C', 'Category D']
values = [10, 25, 15, 30]
plt.bar(categories, values)

plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Bar Chart Example')
plt.show()
```



\begin{figure}

```{python firstcell2}

import matplotlib.pyplot as plt

categories = ['Category A', 'Category B', 'Category C', 'Category D']
values = [10, 25, 15, 30]
plt.bar(categories, values)

plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Bar Chart Example')
plt.show()
```


\end{figure}


